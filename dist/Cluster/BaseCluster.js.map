{"version":3,"sources":["../src/Cluster/BaseCluster.ts"],"names":[],"mappings":"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","file":"BaseCluster.js","sourcesContent":["import { ShardingManager } from '..';\nimport { Client, ClientOptions } from 'discord.js';\nimport { ShardClientUtil } from '../Sharding/ShardClientUtil';\nimport { IPCEvents } from '../Util/Constants';\nimport * as Util from '../Util/Util';\n\nexport interface CloseEvent {\n\tcode: number;\n\treason: string;\n\twasClean: boolean;\n}\n\nexport abstract class BaseCluster {\n\tpublic readonly client: Client;\n\tpublic readonly id: number;\n\n\tconstructor(public manager: ShardingManager) {\n\t\tconst env = process.env;\n\t\tconst shards = env.CLUSTER_SHARDS!.split(',').map(Number);\n\t\tconst clientConfig: ClientOptions = Util.mergeDefault<ClientOptions>(manager.clientOptions, {\n\t\t\tshards,\n\t\t\tshardCount: shards.length,\n\t\t\ttotalShardCount: Number(env.CLUSTER_SHARD_COUNT)\n\t\t});\n\t\tthis.client = new manager.client(clientConfig);\n\t\tconst client = this.client as any;\n\t\tclient.shard = new ShardClientUtil(client, manager.ipcSocket);\n\t\tthis.id = Number(env.CLUSTER_ID);\n\t}\n\n\tpublic async init() {\n\t\tconst shardUtil = this.client.shard!;\n\t\tawait shardUtil.init();\n\t\tthis.client.once('ready', () => shardUtil.send({ op: IPCEvents.READY, d: this.id }, { receptive: false }));\n\t\tthis.client.on('shardReady', id => shardUtil.send({ op: IPCEvents.SHARDREADY, d: { id: this.id, shardID: id } }, { receptive: false }));\n\t\tthis.client.on('shardReconnecting', id => shardUtil.send({ op: IPCEvents.SHARDRECONNECT, d: { id: this.id, shardID: id } }, { receptive: false }));\n\t\tthis.client.on('shardResume', (id, replayed) => shardUtil.send({ op: IPCEvents.SHARDRESUME, d: { id: this.id, shardID: id, replayed } }, { receptive: false }));\n\t\tthis.client.on('shardDisconnect', (closeEvent, id) => shardUtil.send({ op: IPCEvents.SHARDDISCONNECT, d: { id: this.id, shardID: id, closeEvent } }, { receptive: false }));\n\t\tawait this.launch();\n\t}\n\n\tprotected abstract launch(): Promise<void> | void;\n}\n"],"sourceRoot":"../../src"}